plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'cc.kertaskerja.pengajuan_kta'
version = '0.0.1-SNAPSHOT'
description = 'Pengajuan KTA'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'software.amazon.awssdk:s3:2.25.26'
	implementation 'software.amazon.awssdk:auth'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootBuildImage {
    imageName = "${project.name}"
    environment = ["BP_JVM_VERSION" : "21.*"]

    if (System.getProperty( "os.arch" ).toLowerCase().startsWith('aarch')) {
        builder = "paketobuildpacks/builder-jammy-buildpackless-tiny"
        buildpacks = [ "docker.io/paketobuildpacks/java" ]
    } else {
        builder = "docker.io/paketobuildpacks/builder-jammy-tiny"
    }

    docker {
        publishRegistry {
            username = project.findProperty("registryUsername")
            password = project.findProperty("registryToken")
            url = project.findProperty("registryUrl")
        }
    }
}